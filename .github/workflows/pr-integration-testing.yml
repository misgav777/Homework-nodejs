name: PR Integration Testing

on:
  pull_request:
    branches:
      - main
    types: [opened, reopened, synchronize]

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  integration-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT_TOKEN }}
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Verify Deployment Health
        id: verify-health
        run: |
          # Set your staging URL - replace with your actual URL
          STAGING_URL="http://af74b0db95df34fd7b944b072cf86d0f-86d24b8ace29a190.elb.ap-south-1.amazonaws.com/stg"
        
          # Make a simple health check request
          echo "Checking health endpoint at $STAGING_URL/health"
            
          # Try up to 5 times with 10 second delays between attempts
          MAX_ATTEMPTS=5
          ATTEMPT=0
          DELAY=10
          
          while [ $ATTEMPT -lt $MAX_ATTEMPTS ]; do
          ATTEMPT=$((ATTEMPT+1))
          
          RESPONSE=$(curl -s $STAGING_URL/health)
          HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" $STAGING_URL/health)
          
          if [ "$HTTP_STATUS" = "200" ]; then
              echo "Health check passed! Status code: $HTTP_STATUS"
              echo "health_check_passed=true" >> $GITHUB_OUTPUT
              break
          else
              echo "Health check failed (attempt $ATTEMPT/$MAX_ATTEMPTS). Status code: $HTTP_STATUS"
              echo "Waiting $DELAY seconds before retry..."
              sleep $DELAY
          fi
          done
          
            if [ $ATTEMPT -eq $MAX_ATTEMPTS ] && [ "$HTTP_STATUS" != "200" ]; then
            echo "Health check failed after $MAX_ATTEMPTS attempts"
            echo "health_check_passed=false" >> $GITHUB_OUTPUT
            exit 1
          fi      

      - name: Add PR Approval Comment
        if: success()
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Integration tests have passed! This PR is ready to be merged to production.'
            })

      - name: Add PR Failure Comment
        if: failure()
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Integration tests have failed. Please check the workflow logs for details.'
            })